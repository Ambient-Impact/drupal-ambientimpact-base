// -----------------------------------------------------------------------------
//   Base <details> element with an icon instead a list marker
// -----------------------------------------------------------------------------

@use 'icon';

.details--has-icon {

  // Remove the list marker when an icon is present. Note the specific selectors
  // and combinators to match the module and browser default styles.
  > summary:first-of-type,
  &[open] > summary:first-of-type {
    list-style-type: none;
  }

  > summary:first-of-type {

    // We have to explicitly target just the immediate child icon to avoid
    // applying to the content clone in a nested details element.
    > .ambientimpact-icon {

      // Reverts the display: inline; from the base details styles.
      &, * {
        display: revert;
      }

      @include icon.set-icon-display(block);

      @include icon.set-icon-vertical-alignment(centre);

      @include icon.set-icon-size(icon.$icon-size * 1.1);

      @include icon.set-icon-text-spacing(0.4em);

      @include icon.set-icon-text-indent(0);

      // Drupal's "Convert line breaks into HTML (i.e. <br> and <p>)" input
      // filter (filter_autop) has an annoying tendency to wrap the icon text
      // element in a <p> element, which breaks the CSS grid layout. This
      // effectively unwraps it to fix that. Note that display: contents; still
      // has some accessibility issues as of early 2024, but these don't seem to
      // apply to this specific situation.
      //
      // @see https://caniuse.com/css-display-contents
      //
      // @todo Fix this at the input filter level or elsewhere upstream.
      p {
        display: contents;
      }

      // Use the close duration from the animated variant if available, with a
      // fallback value if not defined.
      @include icon.icon-transform-transition(
        $transition-duration: var(--details-close-duration, 0.2s)
      );

    }

  }

  &[open] > summary:first-of-type {

    > .ambientimpact-icon {

      // Use the open duration from the animated variant if available, with a
      // fallback value if not defined.
      @include icon.icon-transform-transition(
        $transition-duration: var(--details-open-duration, 0.2s)
      );

      @include icon.on-icon-icon {
        transform: rotate(180deg);
      }

    }

  }

}
