// -----------------------------------------------------------------------------
//   Base <details> element
// -----------------------------------------------------------------------------

@use '../global/content';
@use '../layout/vertical_spacing' as vertical-spacing;
@use 'material.common/material.general' as material-general;
@use 'material.ripple' as material-ripple;
@use 'sass/variables/general';
@use 'sass/helpers/colour';
@use 'sass/helpers/selector';

@include vertical-spacing.against-previous(
  'details',
  $spacing-small: content.$item-vertical-spacing-small,
  $spacing-large: content.$item-vertical-spacing-large
);

:root {

  --details-content-padding-block:  #{general.$general-spacing};
  --details-content-padding-inline: #{general.$general-spacing};

}

details {

  margin-top:     0;
  margin-bottom:  0;

  border-radius: material-general.$border-radius;

  // Matches user agent stylesheets.
  > summary:first-of-type {

    // normalize.css sets this as display: block, which removes the list marker
    // in Chrome; setting as list-item restores the default Chrome user agent
    // styles.
    display: list-item;

    // @see https://css-tricks.com/two-issues-styling-the-details-element-and-how-to-solve-them/
    cursor: pointer;

    * {
      // @see https://css-tricks.com/two-issues-styling-the-details-element-and-how-to-solve-them/
      display: inline;
    }

    // This gives the end of the <summary> line a padding equal to that of the
    // .details-wrapper so that text doesn't flow past that boundary.
    @include selector.root-conditions(('[dir=ltr]'), 'html') {
      padding-right: var(--details-content-padding-inline);
    }
    @include selector.root-conditions(('[dir=rtl]'), 'html') {
      padding-left: var(--details-content-padding-inline);
    }

    @include material-ripple.ripple-colour(
      $background-colour: colour.$background-light,
      $foreground-colour: colour.$foreground-on-light,
    );

    @include colour.on-dark-scheme {
      @include material-ripple.ripple-colour(
        $background-colour: colour.$background-dark,
        $foreground-colour: colour.$foreground-on-dark,
      );
    }

    // @include colour.set;

    @include material-ripple.material-ripple;

  }

  > .details-wrapper {
    padding:
      var(--details-content-padding-block)
      var(--details-content-padding-inline);
  }

}
