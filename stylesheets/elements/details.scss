// -----------------------------------------------------------------------------
//   Base <details> element
// -----------------------------------------------------------------------------

@use '../global/content';
@use '../layout/vertical_spacing' as vertical-spacing;
@use 'material.common/material.general' as material-general;
@use 'material.ripple' as material-ripple;
@use 'material.common/material.shadow' as material-shadow;
@use 'sass/helpers/colour';
@use 'sass/helpers/selector';
@use 'sass/variables/general';
@use 'sass:color';

@include vertical-spacing.against-previous(
  'details',
  $spacing-small: content.$item-vertical-spacing-small,
  $spacing-large: content.$item-vertical-spacing-large
);

:root {

  --details-content-padding-block:  #{general.$general-spacing * 0.7};

  --details-content-padding-inline: #{general.$general-spacing};

  --details-border-width: 1px;

  --details-border-colour: #{color.mix(
    colour.$background-light,
    colour.$foreground-on-light,
    85%,
  )};

  @include colour.on-dark-scheme {

    --details-border-colour: #{color.mix(
      colour.$background-dark,
      colour.$foreground-on-dark,
      70%,
    )};

  }


}

// This is separated from the rest so it can apply to all <details>, including
// the unstyled demo.
details {

  // Matches user agent stylesheets.
  > summary:first-of-type {

    // normalize.css sets this as display: block, which removes the list marker
    // in Chrome; setting as list-item restores the default Chrome user agent
    // styles.
    display: list-item;

    // Summary elements act more like buttons and clicking or tapping just fast
    // enough causes text selection to occur, which feels out of place and
    // unexpected as a user. In most other cases, this is generally a bad thing
    // to do, but the UX consistency feels more important here.
    user-select: none;

  }

}

details:not(.details--demo-unstyled) {

  margin-top:     0;
  margin-bottom:  0;

  border-radius: material-general.$border-radius;

  border: var(--details-border-width) solid var(--details-border-colour);

  @include colour.set(
    $background: color.adjust(colour.$background-light, $lightness: -5%),
  );

  // Don't use the filter property because it tanks performance badly in both
  // Firefox and Chrome on Android when nesting <details> within each other.
  // This could partially be due to the nested absolutely positioned content
  // and/or content clones, but more likely it's that the browsers are applying
  // the a filter to a filter to a filter, etc.
  //
  // Also note the separate shadow depth levels to fine tune the look. Making
  // both a depth of 1 feels too small but both as 2 feels too large.
  box-shadow: material-shadow.top(2), material-shadow.bottom(1);

  @include colour.on-dark-scheme {

    @include colour.set(
      $background: color.adjust(colour.$background-dark, $lightness: +20%),
    );

    // Dark mode shadows are bigger need to be bigger to be even remotely
    // visible against the dark background.
    box-shadow: material-shadow.shadow(3);

  }

  // Matches user agent stylesheets.
  > summary:first-of-type {

    // @see https://css-tricks.com/two-issues-styling-the-details-element-and-how-to-solve-them/
    cursor: pointer;

    * {
      // @see https://css-tricks.com/two-issues-styling-the-details-element-and-how-to-solve-them/
      display: inline;
    }

    padding:
      var(--details-content-padding-block)
      var(--details-content-padding-inline);

    @include material-ripple.material-ripple;

  }

  > .details-wrapper {
    padding:
      0
      var(--details-content-padding-inline)
      var(--details-content-padding-block)
      var(--details-content-padding-inline);
  }

}
