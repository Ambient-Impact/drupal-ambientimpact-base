// -----------------------------------------------------------------------------
//   Base <details> element with animation
// -----------------------------------------------------------------------------

@use 'sass/helpers/outline';

.details-animated {

  // Matches user agent stylesheets.
  > summary:first-of-type {

    ///
    /// Bottom clip value; uses measured heights from JavaScript.
    ///
    /// This also includes rather large fallback values just in case so that
    /// we don't fail too badly if the custom properties are not valid or set.
    ///
    --details-summary-clip-bottom: calc(
      var(--details-summary-height, 1000vh) +
      var(--details-content-height, 1000vh)
    );

    // This clips all content that overflows above to each side, while allowing
    // content to be visible downwards. This allows the sliding cloned content
    // to seem to roll up into the summary.
    clip-path: polygon(
      0     0,
      100%  0,
      100%  var(--details-summary-clip-bottom),
      0%    var(--details-summary-clip-bottom)
    );

    // Since we clip this element, we have to inset the focus outline or it'll
    // also get clipped and thus be invisible.
    outline-offset: -#{outline.$outline-width};

    &, & * {
      display: revert;
    }

    &::before {

      content: '';

      display: block;

      position: absolute;

      left:   0;
      right:  0;
      top:    0;

      z-index: -1;

      height: var(--details-summary-height);

      background-color: var(--background-colour);

    }

  }

  &__content-clone {

    // Same as .details-wrapper
    padding:
      0
      var(--details-content-padding-inline)
      var(--details-content-padding-block)
      var(--details-content-padding-inline);

    visibility: visible;
    z-index: -2;

    background-color: var(--background-colour);

    // opacity: 0;

    // transition-property: opacity;
    // transition-timing-function: linear;
    // transition-duration: 200ms;

  }

  // &--open &__content-clone {
  //   opacity: 1;
  // }

  > .details-wrapper {

    background-color: var(--background-colour);

    z-index: 1;

  }

  &--open[open] > .details-wrapper {
    position: relative;
  }

}
